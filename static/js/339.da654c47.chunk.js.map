{"version":3,"file":"static/js/339.da654c47.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Leadership.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/References.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","data/resume/leadership.js","data/resume/skills.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport Markdown from 'markdown-to-jsx';\n\nconst Job = ({\n  data: {\n    name, position, url, startDate, endDate, summary, highlights,\n  },\n}) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={url}>{name}</a> - {position}</h4>\n      <p className=\"daterange\"> {dayjs(startDate).format('MMMM YYYY')} - {endDate ? dayjs(endDate).format('MMMM YYYY') : 'PRESENT'}</p>\n    </header>\n    {summary ? (\n      <Markdown\n        options={{\n          overrides: {\n            p: {\n              props: {\n                className: 'summary',\n              },\n            },\n          },\n        }}\n      >\n        {summary}\n      </Markdown>\n    ) : null}\n    {highlights ? (\n      <ul className=\"points\">\n        {highlights.map((highlight) => (\n          <li key={highlight}>{highlight}</li>\n        ))}\n      </ul>\n    ) : null}\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    startDate: PropTypes.string.isRequired,\n    endDate: PropTypes.string,\n    summary: PropTypes.string,\n    highlights: PropTypes.arrayOf(PropTypes.string.isRequired),\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Technical Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={`${job.name}-${job.position}`}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.exact({\n    name: PropTypes.string,\n    position: PropTypes.string,\n    url: PropTypes.string,\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    highlights: PropTypes.arrayOf(PropTypes.string),\n    summary: PropTypes.string,\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Leadership = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"leadership\" />\n    <div className=\"title\">\n      <h3>Leadership Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nLeadership.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nLeadership.defaultProps = {\n  data: [],\n};\n\nexport default Leadership;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({ data, categories }) => {\n  const { category, competency, title } = data;\n\n  // TODO: Consider averaging colors\n  const titleStyle = {\n    background: categories\n      .filter((cat) => category.includes(cat.name))\n      .map((cat) => cat.color)[0],\n  };\n\n  const barStyle = {\n    ...titleStyle,\n    width: `${String(Math.min(100, Math.max((competency / 5.0) * 100.0, 0)))}%`,\n  };\n\n  return (\n    <div className=\"skillbar clearfix\">\n      <div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>\n      <div className=\"skillbar-bar\" style={barStyle} />\n      <div className=\"skill-bar-percent\">{competency} / 5</div>\n    </div>\n  );\n};\n\nSkillBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkillBar.defaultProps = {\n  categories: [],\n};\n\nexport default SkillBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst Skills = ({ skills, categories }) => {\n  const initialButtons = Object.fromEntries([['All', false]].concat(categories.map(({ name }) => [name, false])));\n\n  const [buttons, setButtons] = useState(initialButtons);\n\n  const handleChildClick = (label) => {\n    // Toggle button that was clicked. Turn all other buttons off.\n    const newButtons = Object.keys(buttons).reduce((obj, key) => ({\n      ...obj,\n      [key]: (label === key) && !buttons[key],\n    }), {});\n    // Turn on 'All' button if other buttons are off\n    newButtons.All = !Object.keys(buttons).some((key) => newButtons[key]);\n    setButtons(newButtons);\n  };\n\n  const getRows = () => {\n    // search for true active categories\n    const actCat = Object.keys(buttons).reduce((cat, key) => (\n      buttons[key] ? key : cat\n    ), 'All');\n\n    const comparator = (a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    };\n\n    return skills.sort(comparator).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\n      .map((skill) => (\n        <SkillBar\n          categories={categories}\n          data={skill}\n          key={skill.title}\n        />\n      ));\n  };\n\n  const getButtons = () => Object.keys(buttons).map((key) => (\n    <CategoryButton\n      label={key}\n      key={key}\n      active={buttons}\n      handleClick={handleChildClick}\n    />\n  ));\n\n  return (\n    <div className=\"skills\">\n      <div className=\"link-to\" id=\"skills\" />\n      <div className=\"title\">\n        <h3>Skills</h3>\n      </div>\n      <div className=\"skill-button-container\">\n        {getButtons()}\n      </div>\n      <div className=\"skill-row-container\">\n        {getRows()}\n      </div>\n    </div>\n  );\n};\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    competency: PropTypes.number,\n    category: PropTypes.arrayOf(PropTypes.string),\n  })),\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Selected Courses</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const courses = [\n  {\n    title: 'Learning in Humans and Machines',\n    number: '16:185:601:01',\n    link: 'https://qiongzhang.github.io/LEARNINGINHUMANSMACHINES.PDF',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Proseminar in Cognitive Science',\n    number: '16:185:500',\n    link: 'https://ruccs.rutgers.edu/33-graduate/graduate-courses/645-graduate-courses-fall-2019',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Socially Cognizant Robotics Design',\n    number: '16:332:595',\n    link: 'https://robotics.rutgers.edu/curriculum/',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Robotics & Society',\n    number: '16:332:640',\n    link: 'https://robotics.rutgers.edu/curriculum/',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Socially Cognizant Robotics',\n    number: '16:332:590',\n    link: 'https://robotics.rutgers.edu/curriculum/',\n    university: 'Rutgers University ',\n  },\n  {\n    title: 'Stochastic Signals & Systems',\n    number: '16:332:541',\n    link: 'http://www.winlab.rutgers.edu/~ryates/ece541/',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Machine Vision',\n    number: '16:332:561',\n    link: 'https://www.ece.rutgers.edu/graduate-course-descriptions',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Linear Algebra & Applications',\n    number: '16:642:550',\n    link: 'https://www.math.rutgers.edu/academics/graduate-program/course-descriptions/1030-642-550-linear-algebra-and-applications',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Convex Optimization',\n    number: '16:332:509',\n    link: 'https://www.ece.rutgers.edu/graduate-course-descriptions',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Intro to Deep Learning',\n    number: '16:332:579:06',\n    link: 'https://www.ece.rutgers.edu/new-classes-and-topics-electrical-computer-engineering-14332435-436-445-446-493-494',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'System Analysis',\n    number: '16:332:501',\n    link: 'https://www.ece.rutgers.edu/graduate-course-descriptions',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Comp Arch 1',\n    number: '16:332:563',\n    link: 'https://www.ece.rutgers.edu/graduate-course-descriptions',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Machine Learning for IOT',\n    number: '16:332:579',\n    link: 'https://www.ece.rutgers.edu/new-classes-and-topics-electrical-computer-engineering-14332435-436-445-446-493-494',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Digital Signal Processing',\n    number: '14:332:346',\n    link: 'https://www.ece.rutgers.edu/14332346-digital-signal-processing',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'ECE Capstone Design',\n    number: '14:332:448',\n    link: 'https://www.ece.rutgers.edu/14332448-capstone-design-ece',\n    university: 'Rutgers University',\n  },\n  {\n    title: 'Robotics & Computer Vision',\n    number: '14:332:472',\n    link: 'https://www.ece.rutgers.edu/14332472-introduction-robotics-and-computer-vision',\n    university: 'Rutgers University',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'Rutgers University',\n    degree: 'Ph.D. Computer Engineering',\n    link: 'https://www.ece.rutgers.edu',\n    year: 2024,\n    gpa: 4.0,\n  },\n  {\n    school: 'Rutgers University',\n    degree: 'B.S. Electrical & Computer Engineering',\n    link: 'https://www.ece.rutgers.edu',\n    year: 2019,\n    gpa: 3.45,\n  },\n];\n\nexport default degrees;\n","// TODO: Correct Experience,\n\nconst positions = [\n  {\n    name: 'Rutgers University',\n    position: 'NSF Fellow & Graduate Research Assistant',\n    url: 'https://robotics.rutgers.edu',\n    startDate: '2019-1-15',\n    highlights: [\n      'Conducted computer vision and reinforcement learning research in the lab of Professor Kristin Dana',\n      'Researched socially cognizant robotic navigation Funded by the Reality Aware Networks NSF Grant',\n      'Researched unsupervised learning of social behaviors for pedestrian trajectory prediction funded by the SOCRATES (Socially Cognizant Robotics for a Technologically Enhanced Society) NSF NRT grant',\n      'Researched hierarchical and multi-scale reinforcement learning for visuomotor skills and the intersection of Feudal Reinforcement Learning and Autonomous Vehicles under a grant from Lockheed Martin',\n      'Other Work in vision-based, real-time cranberry albedo analysis for crop ripening predictions, overheating risk analysis, and high throughput phenotyping',\n    ],\n  },\n  {\n    name: 'Apple',\n    position: 'PhD Storytelling Intern',\n    url: 'https://www.apple.com',\n    startDate: '2023-5-1',\n    endDate: '2023-8-31',\n    highlights: [\n      'Led a cross-team effort that incorporated multiple device systems into the photos app for memories',\n      \"Researched factors contributing to a users' connection to their photo library\",\n    ],\n  },\n  {\n    name: 'Apple',\n    position: 'PhD Storytelling Intern',\n    url: 'https://www.apple.com',\n    startDate: '2022-5-1',\n    endDate: '2022-8-31',\n    highlights: [\n      'Wrote production level Objective-C code for the memories feature of the photos app',\n      'Increased personalization of the memories selection process using multimodal signal fusion',\n      'Networked across company departments to define project requirements and integrate multiple data streams',\n    ],\n  },\n  {\n    name: 'Nvidia',\n    position: 'Deep Learning Intern',\n    url: 'https://www.nvidia.com/en-us/research/computer-vision/',\n    startDate: '2021-5-1',\n    endDate: '2021-8-31',\n    highlights: [\n      'Created a transformer based semantic segmentation oracle network for labeling previously unseen images',\n      'Reduced dataset labeling costs companywide by integrating the generated pseudo labels into existing datasets',\n    ],\n  },\n  {\n    name: 'SRI International',\n    position: 'Computer Vision Intern',\n    url: 'https://www.sri.com/computer-vision/',\n    startDate: '2020-5-1',\n    endDate: '2020-8-31',\n    highlights: [\n      'Developed baseline agents for the Darpa Machine Common Sense project',\n      'Created an agent that uses graph networks and abductive reasoning to motivate environment exploration',\n    ],\n  },\n  {\n    name: 'Rutgers University',\n    position: 'Robotics & Computer Vision Guest Lecturer',\n    url: 'https://www.ece.rutgers.edu/14332472-introduction-robotics-and-computer-vision',\n    startDate: '2021-11-1',\n    endDate: '2021-11-1',\n    highlights: [\n      'Taught a class of 50 students about socially cognizant robotics and pedestrian trajectory prediction',\n      'Demonstrated the importance of interdisciplinary research in creating more complete and long-lasting technical solutions',\n    ],\n  },\n  {\n    name: 'Rutgers University',\n    position: 'Robotics & Computer Vision Guest Lecturer',\n    url: 'https://www.ece.rutgers.edu/14332472-introduction-robotics-and-computer-vision',\n    startDate: '2019-11-1',\n    endDate: '2019-11-1',\n    highlights: [\n      'Explained the concepts of hierarchical reinforcement learning to a class of 50 students',\n      'Demonstrated how to apply these concepts to the field of computer vision with autonomous driving',\n    ],\n  },\n  {\n    name: 'Rutgers Honors College Maker Space',\n    position: 'Manager',\n    url: 'https://honorscollege.rutgers.edu/features/new-makerspace-honors-college',\n    startDate: '2016-8-1',\n    endDate: '2019-5-1',\n    highlights: [\n      'Assembled and mastered the use of an X-carve engraver, 3-D printers, vinyl cutter, and sewing machine',\n      'Created a system for keeping track of 200+ inventory items when they are checked out',\n      'Assisted students and faculty in the use of the machines and the creation of projects',\n    ],\n  },\n  {\n    name: 'Rutgers University',\n    position: 'Astronomy Research Assistant',\n    url: '',\n    startDate: '2016-6-1',\n    endDate: '2019-1-1',\n    highlights: [\n      'Studied the role of dark matter and HII regions in galaxy formation',\n      'Used Python to analyze and manipulate galaxy formation simulation data',\n    ],\n  },\n  {\n    name: 'Bank of America',\n    position: 'Technology Analyst Intern',\n    url: 'https://campus.bankofamerica.com/teams.html',\n    startDate: '2018-6-1',\n    endDate: '2018-8-1',\n    highlights: [\n      'Used machine learning principles and sci-kit learn in python to create a predictive model for stock market trades',\n      'Created a pipeline for data cleaning and prediction result interpretation in python',\n    ],\n  },\n  {\n    name: 'Bank of America',\n    position: 'Technology Analyst Intern',\n    url: 'https://campus.bankofamerica.com/teams.html',\n    startDate: '2017-6-1',\n    endDate: '2017-8-1',\n    highlights: [\n      'Created a regression test for their trade reporting system using python',\n      'Followed the regression test through the SDLC including analysis and release',\n    ],\n  },\n  {\n    name: 'Bank of America',\n    position: 'Front End Development Intern',\n    url: 'https://campus.bankofamerica.com/teams.html',\n    startDate: '2015-6-1',\n    endDate: '2015-8-1',\n    highlights: [\n      'Modified 2 GUIs for an in-house market analytics program using ASP.Net, C++, HTML, and Javascript',\n      'Followed 3 software projects through the SDLC',\n    ],\n  },\n];\n\nexport default positions;\n","// TODO: Correct Experience,\n\nconst leadership = [\n  {\n    name: 'Rutgers University',\n    position: 'Novice 2 Expert Club Founder',\n    url: 'https://robotics.rutgers.edu/n2e-robotics/',\n    startDate: '2021-1-1',\n    endDate: '2022-12-1',\n    highlights: [\n      'Started club for students to teach each other key robotics concepts in a non-intimidating environment',\n      'Organized club events, recruited student teachers, taught modules, and coordinated with university faculty',\n    ],\n  },\n  {\n    name: 'Rutgers/HTHS',\n    position: 'High Tech High School  Mentorship Program Mentor',\n    url: '',\n    startDate: '2019-9-1',\n    endDate: '2021-1-1',\n    highlights: [\n      'Mentored two female, high school seniors weekly in Professor Kristin Dana’s research lab at Rutgers University',\n      'Created and facilitated programming to help them learn computer vision and machine learning techniques',\n    ],\n  },\n  {\n    company: 'Theta Tau - Omicron Delta Chapter',\n    position: 'Treasurer',\n    link: 'https://thetatau.rutgers.edu',\n    startDate: '2017-12-1',\n    endDate: '2018-12-1',\n    highlights: [\n      'Managed the budget and supervised the collection of dues for the 2018 calendar year',\n      'Collaborated with the different chairs to come up with a fiscally feasible spending plan',\n    ],\n  },\n  {\n    company: 'Theta Tau - Omicron Delta Chapter',\n    position: 'Dance Marathon Liaison',\n    link: 'https://thetatau.rutgers.edu',\n    startDate: '2017-9-1',\n    endDate: '2018-3-1',\n    highlights: [\n      'Organized fundraising events for the team members to reach their charity goals',\n      'Facilitated communication between the Dance Marathon main offices and the Omicron Delta chapter of Theta Tau',\n    ],\n  },\n];\n\nexport default leadership;\n","// TODO: Add Athletic Skills, Office Skills,\n// ToDo: Data Engineering, Data Science, ML Engineering, ... ?\n\nconst skills = [\n  {\n    title: 'Numpy',\n    competency: 4,\n    category: ['Libraries/Frameworks'],\n  },\n  {\n    title: 'HTML + SASS/SCSS/CSS',\n    competency: 1,\n    category: ['Languages'],\n  },\n  {\n    title: 'Python',\n    competency: 5,\n    category: ['Languages'],\n  },\n  {\n    title: 'C++',\n    competency: 1,\n    category: ['Languages'],\n  },\n  {\n    title: 'Java',\n    competency: 1,\n    category: ['Languages'],\n  },\n  {\n    title: 'MATLAB',\n    competency: 3,\n    category: ['Languages'],\n  },\n  {\n    title: 'Objective-C',\n    competency: 2,\n    category: ['Languages'],\n  },\n  {\n    title: 'Pandas',\n    competency: 4,\n    category: ['Libraries/Frameworks'],\n  },\n  {\n    title: 'Matplotlib',\n    competency: 3,\n    category: ['Libraries/Frameworks'],\n  },\n  {\n    title: 'Scikit-Learn',\n    competency: 3,\n    category: ['Libraries/Frameworks'],\n  },\n  {\n    title: 'OpenCV',\n    competency: 4,\n    category: ['Libraries/Frameworks'],\n  },\n  {\n    title: 'Pytorch',\n    competency: 4,\n    category: ['Libraries/Frameworks'],\n  },\n  {\n    title: 'Torchvision',\n    competency: 4,\n    category: ['Libraries/Frameworks'],\n  },\n  {\n    title: 'Pillow',\n    competency: 2,\n    category: ['Libraries/Frameworks'],\n  },\n  {\n    title: 'CometML',\n    competency: 2,\n    category: ['Libraries/Frameworks'],\n  },\n  {\n    title: 'Git',\n    competency: 3,\n    category: ['Tools/Platforms'],\n  },\n  {\n    title: 'Linux',\n    competency: 4,\n    category: ['Tools/Platforms'],\n  },\n  {\n    title: 'Anaconda',\n    competency: 3,\n    category: ['Tools/Platforms'],\n  },\n  {\n    title: 'Microsoft Office',\n    competency: 5,\n    category: ['Tools/Platforms'],\n  },\n  {\n    title: 'Deep Learning',\n    competency: 4,\n    category: ['Topics'],\n  },\n  {\n    title: 'Machine Learning',\n    competency: 4,\n    category: ['Topics'],\n  },\n  {\n    title: 'Computer Vision',\n    competency: 4,\n    category: ['Topics'],\n  },\n  {\n    title: 'Human-Computer Interaction',\n    competency: 2,\n    category: ['Topics'],\n  },\n  {\n    title: 'Temporal Sequence Modeling',\n    competency: 3,\n    category: ['Topics'],\n  },\n  {\n    title: 'Socially Cognizant Robotics',\n    competency: 2,\n    category: ['Topics'],\n  },\n  {\n    title: 'Pedestrian Trajectory Prediction',\n    competency: 4,\n    category: ['Topics'],\n  },\n  {\n    title: 'Autonomous Driving',\n    competency: 3,\n    category: ['Topics'],\n  },\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\n// this is a list of colors that I like. The length should be === to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#6968b3',\n  '#37b1f5',\n  '#40494e',\n  '#515dd4',\n  '#e47272',\n  '#cc7b94',\n  '#3896e2',\n  '#c3423f',\n  '#d75858',\n  '#747fff',\n  '#64cb7b',\n];\n\nconst categories = [\n  ...new Set(skills.flatMap(({ category }) => category)),\n].sort().map((category, index) => ({\n  name: category,\n  color: colors[index],\n}));\n\nexport { categories, skills };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Leadership from '../components/Resume/Leadership';\nimport Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport leadership from '../data/resume/leadership';\nimport { skills, categories } from '../data/resume/skills';\n\n// NOTE: sections are displayed in order defined.\nconst sections = {\n  Education: () => <Education data={degrees} />,\n  Experience: () => <Experience data={positions} />,\n  Leadership: () => <Leadership data={leadership} />,\n  Skills: () => <Skills skills={skills} categories={categories} />,\n  Courses: () => <Courses data={courses} />,\n  References: () => <References />,\n};\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Faith Johnson's Resume\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            {Object.keys(sections).map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n        </div>\n      </header>\n      {Object.entries(sections).map(([name, Section]) => (\n        <Section key={name} />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["_ref","data","_jsx","className","children","_jsxs","degree","href","link","school","year","Education","id","map","Degree","defaultProps","_ref$data","name","position","url","startDate","endDate","summary","highlights","dayjs","format","Markdown","options","overrides","p","props","highlight","Experience","job","Job","concat","Leadership","company","handleClick","active","label","type","onClick","SkillBar","categories","category","competency","title","titleStyle","background","filter","cat","includes","color","barStyle","_objectSpread","width","String","Math","min","max","style","Skills","skills","initialButtons","Object","fromEntries","_ref2","_useState","useState","_useState2","_slicedToArray","buttons","setButtons","handleChildClick","newButtons","keys","reduce","obj","key","_defineProperty","All","some","CategoryButton","actCat","sort","a","b","ret","skill","getRows","Course","last","number","courses","university","course","idx","length","Courses","Link","to","gpa","colors","_toConsumableArray","Set","flatMap","index","sections","_Education","degrees","_Experience","positions","_Leadership","leadership","_Skills","_Courses","References","_References","Main","description","sec","toLowerCase","entries","Section"],"sourceRoot":""}